// SFA, 4+4サイト

#include <iostream.h>
#include <fstream.h>
#include <math.h>
//#include <process.h>
//#include "dsyev.h"

main()
{
	int i,j,n,m,s,ss;
	
	double cu_00[8][1][8],cd_00[8][1][8],cd_10[8][8][64],cu_11[8][8][64];
	double Qud,Qdu;
	double H[4900][4900];
	
	// 生成消滅演算子
	for(s=0;s<=7;++s){
		for(j=0;j<=7;++j){
			cu_00[s][0][j]=cd_00[s][0][j]=0.0;
		}
		for(i=0;i<=7;++i){
			for(j=0;j<=63;++j){
				cd_10[s][i][j]=cu_11[s][i][j]=0.0;
			}
		}
	}
	// cu_00 [0,0](0:0) ---> [1,0](u:0,...,7)
	cu_00[0][0][0]=1.0;
	cu_00[1][0][1]=1.0;
	cu_00[2][0][2]=1.0;
	cu_00[3][0][3]=1.0;
	cu_00[4][0][4]=1.0;
	cu_00[5][0][5]=1.0;
	cu_00[6][0][6]=1.0;
	cu_00[7][0][7]=1.0;
	// cd_00 [0,0](0:0) ---> [1,1](d:0,...,7)
	cd_00[0][0][0]=1.0;
	cd_00[1][0][1]=1.0;
	cd_00[2][0][2]=1.0;
	cd_00[3][0][3]=1.0;
	cd_00[4][0][4]=1.0;
	cd_00[5][0][5]=1.0;
	cd_00[6][0][6]=1.0;
	cd_00[7][0][7]=1.0;
	// cu_11 [1,1](d:0,...,7) ---> [2,1](0:0,.,8,.,16,.,24,.,32,.,40,.,48,.,56,...,63)
	cu_11[0][0][0]=cu_11[0][1][1]=cu_11[0][2][2]=cu_11[0][3][3]=cu_11[0][4][4]=cu_11[0][5][5]=cu_11[0][6][6]=cu_11[0][7][7]=1.0;
	cu_11[1][0][8]=-1.0; cu_11[1][1][9]=cu_11[1][2][10]=cu_11[1][3][11]=cu_11[1][4][12]=cu_11[1][5][13]=cu_11[1][6][14]=cu_11[1][7][15]=1.0;
	cu_11[2][0][16]=cu_11[2][1][17]=-1.0; cu_11[2][2][18]=cu_11[2][3][19]=cu_11[2][4][20]=cu_11[2][5][21]=cu_11[2][6][22]=cu_11[2][7][23]=1.0;
	cu_11[3][0][24]=cu_11[3][1][25]=cu_11[3][2][26]=-1.0; cu_11[3][3][27]=cu_11[3][4][28]=cu_11[3][5][29]=cu_11[3][6][30]=cu_11[3][7][31]=1.0;
	cu_11[4][0][32]=cu_11[4][1][33]=cu_11[4][2][34]=cu_11[4][3][35]=-1.0; cu_11[4][4][36]=cu_11[4][5][37]=cu_11[4][6][38]=cu_11[4][7][39]=1.0;
	cu_11[5][0][40]=cu_11[5][1][41]=cu_11[5][2][42]=cu_11[5][3][43]=cu_11[5][4][44]=-1.0; cu_11[5][5][45]=cu_11[5][6][46]=cu_11[5][7][47]=1.0;
	cu_11[6][0][48]=cu_11[6][1][49]=cu_11[6][2][50]=cu_11[6][3][51]=cu_11[6][4][52]=cu_11[6][5][53]=-1.0; cu_11[6][6][54]=cu_11[6][7][55]=1.0;
	cu_11[7][0][56]=cu_11[7][1][57]=cu_11[7][2][58]=cu_11[7][3][59]=cu_11[7][4][60]=cu_11[7][5][61]=cu_11[7][6][62]=-1.0; cu_11[7][7][63]=1.0;
	// cd_10 [1,0](u:0,...,7) ---> [2,1](0:0,.,8,.,16,.,24,.,32,.,40,.,48,.,56,...,63)
	cd_10[0][0][0]=-1.0; cd_10[0][1][8]=cd_10[0][2][16]=cd_10[0][3][24]=cd_10[0][4][32]=cd_10[0][5][40]=cd_10[0][6][48]=cd_10[0][7][56]=1.0;
	cd_10[1][0][1]=cd_10[1][1][9]=-1.0; cd_10[1][2][17]=cd_10[1][3][25]=cd_10[1][4][33]=cd_10[1][5][41]=cd_10[1][6][49]=cd_10[1][7][57]=1.0;
	cd_10[2][0][2]=cd_10[2][1][10]=cd_10[2][2][18]=-1.0; cd_10[2][3][26]=cd_10[2][4][34]=cd_10[2][5][42]=cd_10[2][6][50]=cd_10[2][7][58]=1.0;
	cd_10[3][0][3]=cd_10[3][1][11]=cd_10[3][2][19]=cd_10[3][3][27]=-1.0; cd_10[3][4][35]=cd_10[3][5][43]=cd_10[3][6][51]=cd_10[3][7][59]=1.0;
	cd_10[4][0][4]=cd_10[4][1][12]=cd_10[4][2][20]=cd_10[4][3][28]=cd_10[4][4][36]=-1.0; cd_10[4][5][44]=cd_10[4][6][52]=cd_10[4][7][60]=1.0;
	cd_10[5][0][5]=cd_10[5][1][13]=cd_10[5][2][21]=cd_10[5][3][29]=cd_10[5][4][37]=cd_10[5][5][45]=-1.0; cd_10[5][6][53]=cd_10[5][7][61]=1.0;
	cd_10[6][0][6]=cd_10[6][1][14]=cd_10[6][2][22]=cd_10[6][3][30]=cd_10[6][4][38]=cd_10[6][5][46]=cd_10[6][6][54]=-1.0; cd_10[6][7][62]=1.0;
	cd_10[7][0][7]=cd_10[7][1][15]=cd_10[7][2][23]=cd_10[7][3][31]=cd_10[7][4][39]=cd_10[7][5][47]=cd_10[7][6][55]=cd_10[7][7][63]=-1.0;
	// cu0 [2,1](0:0,.,8,.,16,.,24,.,32,.,40,.,48,.,56,...,63) ---> [3,1] (
	
	
	
	
	
	
	
	
	
	// 生成消滅演算子は正しいか
	// [0,0] ---> [2,1]
	for(s=0;s<=7;++s){
		for(ss=0;ss<=7;++ss){
			for(j=0;j<=63;++j){
				Qud=Qdu=0.0;
				for(n=0;n<=7;++n){
					Qud+=cu_00[s][0][n]*cd_10[ss][n][j];
					Qdu+=cd_00[ss][0][n]*cu_11[s][n][j];
				};
				if((fabs(Qud+Qdu)>0.000000000001)){
					cout<<"[00->21] : (s,ss)=("<<s<<","<<ss<<"),(i,j)=(0,"<<j<<") : (Qud,Qdu)=("<<Qud<<","<<Qdu<<")\n";
				};
			};
		};
	};
	
	
	
	
	
	
	
	
	
	
	cout << "<<end!>>\n";
}
