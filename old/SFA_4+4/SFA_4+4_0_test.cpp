// SFA, 4+4サイト

#include <iostream.h>
#include <fstream.h>
#include <math.h>
//#include <process.h>
//#include "dsyev.h"

main()
{
	int i,j,n,m,s,ss;
	
	double cu_00[8][1][8],cd_00[8][1][8],cd_10[8][8][64],cu_11[8][8][64],cu_21[8][64][224],cd_21[8][64][224];
	double Qud,Qdu;
	double H0[10000][10000];
	
	// 生成消滅演算子
	for(s=0;s<=7;++s){
		for(j=0;j<=7;++j){
			cu_00[s][0][j]=cd_00[s][0][j]=0.0;
		}
		for(i=0;i<=7;++i){
			for(j=0;j<=63;++j){
				cd_10[s][i][j]=cu_11[s][i][j]=0.0;
			}
		}
	}
	// cu_00 : [0,0](0:0) ---> [1,0](u:0,...,7)
	for(s=0;s<=7;++s){
		cu_00[s][0][s]=1.0;
	}
	// cd_00 : [0,0](0:0) ---> [1,1](d:0,...,7)
	for(s=0;s<=7;++s){
		cd_00[s][0][s]=1.0;
	}
	// cu_11 [1,1](d:0,...,7) ---> [2,1](0:0,.,8,.,16,.,24,.,32,.,40,.,48,.,56,...,63)
	for(s=0;s<=7;++s){
		for(i=0;i<=7;++i){
			cu_11[s][i][8*s+i]=1.0;
		}
	}
	// cd_10 [1,0](u:0,...,7) ---> [2,1](0:0,.,8,.,16,.,24,.,32,.,40,.,48,.,56,...,63)
	for(s=0;s<=7;++s){
		for(i=0;i<=7;++i){
			cd_10[s][i][s+8*i]=-1.0;
		}
	}
	// cu_21 : [2,1](0:0,.,8,.,16,.,24,.,32,.,40,.,48,.,56,...,63) ---> [3,1] (0,.,56,.,104,.,144,.,176,.,200,.,216,...,223)
	// s=0
	for(i=0;i<=55;++i){
		cu_21[0][i+8][i]=1.0;       // (0,,.,8,.,16,.,24,.,32,.,40,.,48,...,55)
	}
	// s=1
	for(i=0;i<=7;++i){
		cu_21[1][i][i]=-1.0;        // (0,...,7)
	}
	for(i=0;i<=47;++i){
		cu_21[1][i+16][i+56]=1.0;   // (56,.,64,.,72,.,80,.,88,.,96,...,103)
	}
	// s=2
	for(i=0;i<=7;++i){
		cu_21[2][i][i]=-1.0;        // (0,...,7)
		cu_21[2][i+8][i+56]=-1.0;   // (56,...63)
	}
	for(i=0;i<=39;++i){
		cu_21[2][i+16][i+64]=1.0;   // (104,.,112,.,120,.,128,.,136,...,143)
	}
	// s=3
	for(i=0;i<=7;++i){
		cu_21[3][i][i+8]=-1.0;      // (8,...,15)
		cu_21[3][i+8][i+64]=-1.0;   // (64,...,71)
		cu_21[3][i+16][i+104]=-1.0; // (104,...,111)
	};
	for(i=0;i<=31;++i){
		cu_21[3][i+32][i+144]=1.0;  // (144,.,152,.,160,.,168,...,175)
	}
	// s=4
	for(i=0;i<=7;++i){
		cu_21[4][i][i+16]=-1.0;     // (16,...,23)
		cu_21[4][i+8][i+72]=-1.0;   // (72,...,79)
		cu_21[4][i+16][i+112]=-1.0; // (112,...,119)
		cu_21[4][i+24][i+144]=-1.0; // (144,...,151)
	};
	for(i=0;i<=23;++i){
		cu_21[4][i+40][i+176]=1.0;  // (176,.,184,.,192,...,199)
	}
	// s=5
	for(i=0;i<=7;++i){
		cu_21[5][i][i+24]=-1.0;     // (24,...,31)
		cu_21[5][i+8][i+80]=-1.0;   // (80,...,87)
		cu_21[5][i+16][i+120]=-1.0; // (120,...,127)
		cu_21[5][i+24][i+152]=-1.0; // (152,...,159)
		cu_21[5][i+32][i+176]=-1.0; // (176,...,183)
	}
	for(i=0;i<=15;++i){
		cu_21[5][i+48][i+200]=1.0;  // (200,.,208,...,215)
	}
	// s=6
	for(i=0;i<=7;++i){
		cu_21[6][i][i+32]=-1.0;     // (32,...,39)
		cu_21[6][i+8][i+88]=-1.0;   // (88,...,95)
		cu_21[6][i+16][i+128]=-1.0; // (128,...,135)
		cu_21[6][i+24][i+160]=-1.0; // (160,...,167)
		cu_21[6][i+32][i+184]=-1.0; // (184,...,191)
		cu_21[6][i+40][i+200]=-1.0; // (200,...,207)
	}
	for(i=0;i<=7;++i){
		cu_21[6][i+56][i+216]=1.0;  // (216,...,223)
	}
	// s=7
	for(i=0;i<=7;++i){
		cu_21[7][i][i+40]=-1.0;     // (40,...,47)
		cu_21[7][i+8][i+96]=-1.0;   // (96,...,103)
		cu_21[7][i+16][i+136]=-1.0; // (136,...,143)
		cu_21[7][i+24][i+168]=-1.0; // (168,...,175)
		cu_21[7][i+32][i+192]=-1.0; // (192,...,199)
		cu_21[7][i+40][i+208]=-1.0; // (208,...,215)
		cu_21[7][i+48][i+216]=-1.0; // (216,...,223)
	}
	// cd_21 : [2,1](0:0,.,8,.,16,.,24,.,32,.,40,.,48,.,56,...,63) ---> [3,2] (0,.,56,.,104,.,144,.,176,.,200,.,216,...,223)
	// s=0
	for(i=0;i<=7;++i){
		cd_21[0][8*i+1][i]=-1.0;      // (0,...,7)
		cd_21[0][8*i+2][i+8]=-1.0;    // (8,...,15)
		cd_21[0][8*i+3][i+16]=-1.0;   // (16,...,23)
		cd_21[0][8*i+4][i+24]=-1.0;   // (24,...,31)
		cd_21[0][8*i+5][i+32]=-1.0;   // (32,...,39)
		cd_21[0][8*i+6][i+40]=-1.0;   // (40,...,47)
		cd_21[0][8*i+7][i+48]=-1.0;   // (48,...,55)
	}
	// s=1
	for(i=0;i<=7;++i){
		cd_21[1][8*i][i]=1.0;         // (0,...,7)
		cd_21[1][8*i+2][i+56]=-1.0;   // (56,...,63)
		cd_21[1][8*i+3][i+64]=-1.0;   // (64,...,71)
		cd_21[1][8*i+4][i+72]=-1.0;   // (72,...,79)
		cd_21[1][8*i+5][i+80]=-1.0;   // (80,...,87)
		cd_21[1][8*i+6][i+88]=-1.0;   // (88,...,95)
		cd_21[1][8*i+7][i+96]=-1.0;   // (96,...,103)
	}
	// s=2
	for(i=0;i<=7;++i){
		cd_21[1][8*i][i+8]=1.0;       // (8,...,15)
		cd_21[1][8*i+1][i+56]=1.0;    // (56,...,63)
		cd_21[1][8*i+3][i+104]=-1.0;  // (104,...,111)
		cd_21[1][8*i+4][i+112]=-1.0;  // (112,...,119)
		cd_21[1][8*i+5][i+120]=-1.0;  // (120,...,127)
		cd_21[1][8*i+6][i+128]=-1.0;  // (128,...,135)
		cd_21[1][8*i+7][i+136]=-1.0;  // (136,...,143)
	}
	// s=3
	for(i=0;i<=7;++i){
		cd_21[1][8*i][i+16]=1.0;      // (16,...,23)
		cd_21[1][8*i+1][i+64]=1.0;    // (64,...,71)
		cd_21[1][8*i+2][i+104]=1.0;   // (104,...,111)
		cd_21[1][8*i+4][i+144]=-1.0;  // (144,...,151)
		cd_21[1][8*i+5][i+152]=-1.0;  // (152,...,159)
		cd_21[1][8*i+6][i+160]=-1.0;  // (160,...,167)
		cd_21[1][8*i+7][i+168]=-1.0;  // (168,...,175)
	}
	// s=4
	for(i=0;i<=7;++i){
		cd_21[1][8*i][i+24]=1.0;      // (24,...,31)
		cd_21[1][8*i+1][i+72]=1.0;    // (72,...,79)
		cd_21[1][8*i+2][i+112]=1.0;   // (112,...,119)
		cd_21[1][8*i+3][i+144]=1.0;   // (144,...,151)
		cd_21[1][8*i+5][i+176]=-1.0;  // (176,...,183)
		cd_21[1][8*i+6][i+184]=-1.0;  // (184,...,191)
		cd_21[1][8*i+7][i+192]=-1.0;  // (192,...,199)
	}
	// s=5
	for(i=0;i<=7;++i){
		cd_21[1][8*i][i+32]=1.0;      // (32,...,39)
		cd_21[1][8*i+1][i+80]=1.0;    // (80,...,87)
		cd_21[1][8*i+2][i+120]=1.0;   // (120,...,127)
		cd_21[1][8*i+3][i+152]=1.0;   // (152,...,159)
		cd_21[1][8*i+4][i+176]=1.0;   // (176,...,183)
		cd_21[1][8*i+6][i+200]=-1.0;  // (200,...,207)
		cd_21[1][8*i+7][i+208]=-1.0;  // (208,...,215)
	}
	// s=6
	for(i=0;i<=7;++i){
		cd_21[1][8*i][i+40]=1.0;      // (40,...,47)
		cd_21[1][8*i+1][i+88]=1.0;    // (88,...,91)
		cd_21[1][8*i+2][i+128]=1.0;   // (128,...,135)
		cd_21[1][8*i+3][i+160]=1.0;   // (160,...,167)
		cd_21[1][8*i+4][i+184]=1.0;   // (184,...,191)
		cd_21[1][8*i+5][i+200]=1.0;   // (200,...,207)
		cd_21[1][8*i+7][i+216]=-1.0;  // (216,...,223)
	}
	// s=7
	for(i=0;i<=7;++i){
		cd_21[1][8*i][i+48]=1.0;      // (48,...,47)
		cd_21[1][8*i+1][i+96]=1.0;    // (96,...,103)
		cd_21[1][8*i+2][i+136]=1.0;   // (136,...,143)
		cd_21[1][8*i+3][i+168]=1.0;   // (168,...,175)
		cd_21[1][8*i+4][i+192]=1.0;   // (192,...,199)
		cd_21[1][8*i+5][i+208]=1.0;   // (208,...,215)
		cd_21[1][8*i+6][i+224]=1.0;   // (224,...,231)
	}
	// cd_31 : [2,1](0:0,.,8,.,16,.,24,.,32,.,40,.,48,.,56,...,63) ---> [3,1] (0,.,56,.,104,.,144,.,176,.,200,.,216,...,223) ---> 
	// s=0
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	// 生成消滅演算子は正しいか
	// [0,0] ---> [2,1]
	for(s=0;s<=7;++s){
		for(ss=0;ss<=7;++ss){
			for(j=0;j<=63;++j){
				Qud=Qdu=0.0;
				for(n=0;n<=7;++n){
					Qud+=cu_00[s][0][n]*cd_10[ss][n][j];
					Qdu+=cd_00[ss][0][n]*cu_11[s][n][j];
				};
				if((fabs(Qud+Qdu)>0.000000000001)){
					cout<<"[00->21] : (s,ss)=("<<s<<","<<ss<<"),(i,j)=(0,"<<j<<") : (Qud,Qdu)=("<<Qud<<","<<Qdu<<")\n";
				};
			};
		};
	};
	/*
	// [2,1] ---> [4,2]
	for(s=0;s<=7;++s){
		for(ss=0;ss<=7;++ss){
			for(i=0;i<=63;++i){
			for(j=0;j<=223;++j){
				Qud=Qdu=0.0;
				for(n=0;n<=7;++n){
					Qud+=cu_21[s][i][n]*cd_31[ss][n][j];
					Qdu+=cd_21[ss][i][n]*cu_32[s][n][j];
				};
				if((fabs(Qud+Qdu)>0.000000000001)){
					cout<<"[21->42] : (s,ss)=("<<s<<","<<ss<<"),(i,j)=(0,"<<j<<") : (Qud,Qdu)=("<<Qud<<","<<Qdu<<")\n";
				};
			};
		};
	};
	*/
	
	
	
	
	
	
	
	
	cout << "<<end!>>\n";
}
